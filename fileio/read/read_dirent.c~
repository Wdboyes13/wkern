#include <fileio/ATA.h>
#include <fileio/fat16.h>
#include <io/printer.h>
#include <types/nums.h>
void fat16_ls() {
    kuint32_t entries_per_sector = fat16.bytes_per_sector;
    kuint32_t root_dir_sectors =
        ((fat16.root_entry_count * 32) + (fat16.bytes_per_sector - 1)) /
        fat16.bytes_per_sector;

    kuint8_t sector[512];

    for (kuint32_t i = 0; i < root_dir_sectors; i++) {
        ata_read_sector(fat16.root_dir_start_lba + i, sector);
        for (kuint32_t j = 0; j < entries_per_sector; j++) {
            kuint8_t *entry = &sector[j * 32];

            if (entry[0] == 0x00)
                return;
            if (entry[0] == 0xE5)
                continue;

            kuint16_t cluster = *(kuint16_t *)&entry[26];
            kuint32_t size = *(kuint32_t *)&entry[28];

            kprintf("File: ");
            for (int i = 0; i < 8 && entry[i] != ' '; i++) {
                kputchar(entry[i]);
            }
            kputchar('.');
            for (int i = 0; i < 3 && entry[8 + i] != ' '; i++) {
                kputchar(entry[8 + i]);
            }
            kprintf(" | Cluster: ");
            kprint_hex(cluster);
            kprintf(" | Size: ");
            kprint_hex(size);
            kputchar('\n');
        }
    }
}
}
